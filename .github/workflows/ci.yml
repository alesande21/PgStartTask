name: CID

on: [push, pull_request]

env:
  CR_REGISTRY: crp6prgfic4t20er8gcr
  CR_REPOSITORY: pgstart
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -o commandServer ./server

      - name: Test
        run: make test

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'

      - name: Install dependencies
        run: go mod download

      - name: Test
        run: make test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
#    needs:
#      - build
#      - test

    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.IAM_TOKEN }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy docker-compose.yaml to server
        run: |
          scp -o "StrictHostKeyChecking=no" ./docker-compose.yaml slava19v@${{ secrets.IP_VIRTUAL_M }}:/home/slava19v  
          scp -o "StrictHostKeyChecking=no" ./resources/schema.sql slava19v@${{ secrets.IP_VIRTUAL_M }}:/home/slava19v 


      - name: Deploy to server
        run: |
          ssh -o "StrictHostKeyChecking=no" slava19v@${{ secrets.IP_VIRTUAL_M }} "\
          sudo docker login --username oauth --password-stdin cr.yandex <<< ${{ secrets.OAUTH_TOKEN }}; \
          sudo docker-compose down; \
          IMAGES=\$(sudo docker images -q); \
          if [ ! -z \"\$IMAGES\" ]; then \
            sudo docker rmi -f \$IMAGES; \
          fi; \
          echo 'Pulling image'; \
          sudo docker pull cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG; \
          echo 'Finding latest tag'; \
          LATEST_TAG=\$(sudo docker images cr.yandex/crp6prgfic4t20er8gcr/pgstart:latest --format '{{.Tag}} {{.CreatedAt}}' | sort -r | head -n 1 | awk '{print \$1}'); \
          echo 'Running docker-compose up with tag: $LATEST_TAG'; \
          sudo -E TAG=\$LATEST_TAG docker-compose up -d"
